r"""
 ____                                       ____                     
/\  _`\                                    /\  _`\                   
\ \ \L\ \___   __  __  __     __   _ __    \ \ \L\ \    ___   __  _  
 \ \ ,__/ __`\/\ \/\ \/\ \  /'__`\/\`'__\   \ \  _ <'  / __`\/\ \/'\ 
  \ \ \/\ \L\ \ \ \_/ \_/ \/\  __/\ \ \/     \ \ \L\ \/\ \L\ \/>  </ 
   \ \_\ \____/\ \___x___/'\ \____\\ \_\      \ \____/\ \____//\_/\_\
    \/_/\/___/  \/__//__/   \/____/ \/_/       \/___/  \/___/ \//\/_/
"""

print("Trying to build some fancy ascii art like this:")
print(__doc__)


import argparse
import os.path as path

parser = argparse.ArgumentParser(
    prog='logo_art.py',
    description='Generate some fancy ascii art like this:\n' + __doc__)

parser.add_argument('-o', '--output', dest='output',
                    default='logo.h', help='Output file name.', required=True)

args = parser.parse_args()

string = __doc__

string = string.replace("\n", "\r\n")

string_bin = string.encode('utf-8')

string = [r"\x%02X" % i for i in string_bin]

# split to array of arrays of length 16
string = [string[i:i+16] for i in range(0, len(string), 16)]

# combine to string
string = [''.join(i) for i in string]

# attach " to the begin and end of each string
string = ['"' + i + '"' for i in string]

string = '\\\n    '.join(string)

with open(args.output, 'w',encoding='utf-8') as f:
    f.write(f"""/**
 * this file is automatically generated by {path.basename(__file__)}
 * do not modify it manually
 */

#pragma once
#ifndef LOGO_ART_STRING
#define LOGO_ART_STRING\\
    {string}

#endif // ! LOGO_ART_STRING
""")
